apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = publishedGroupId
version = libraryVersion

// begin maven install segment
install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId publishedArtifactId

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

// begin bintray deploy segment.

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = BINTRAY_USER_NAME
    key = BINTRAY_API_KEY

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        issueTrackerUrl = issuesUrl
        githubRepo = githubRepoPath
        githubReleaseNotesFile = githubRepoReadme
        licenses = allLicenses
        dryRun = false   // true表示只模拟执行，不实际进行上传
        publish = true
        override = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            name = this.version
            released = new Date()
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = GPG_SIGN_PASSWORD // Optional. The passphrase for GPG signing'
            }
        }
    }
}